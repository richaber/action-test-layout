<?xml version="1.0"?>
<ruleset name="Custom Standards">

  <description>Custom Standards</description>

  <ini name="memory_limit" value="512M"/>

  <arg name="cache"/>
  <arg name="basepath" value="./"/>
  <arg name="parallel" value="20"/>
  <arg name="colors"/>
  <arg value="ps"/>
  <arg name="extensions" value="php"/>
  <arg name="encoding" value="UTF-8"/>

  <!-- Don't sniff the following directories or file types. -->
  <exclude-pattern>/.idea/*</exclude-pattern>
  <exclude-pattern>/bin/*</exclude-pattern>
  <exclude-pattern>/build/*</exclude-pattern>
  <exclude-pattern>/node_modules/*</exclude-pattern>
  <exclude-pattern>/vendor/*</exclude-pattern>

  <!-- Set to the supported PHP version(s). -->
  <config name="testVersion" value="7.4-8.0"/>

  <!-- Config for the "deprecated" sniffs. The minimum supported WordPress version.
  This should match what's listed in style.css.
  Ref: https://github.com/WordPress/WordPress-Coding-Standards/wiki/Customizable-sniff-properties#minimum-wp-version-to-check-for-usage-of-deprecated-functions-classes-and-function-parameters
  -->
  <config name="minimum_supported_wp_version" value="5.7"/>

  <!-- Use PSR-12 Coding Standards. -->
  <rule ref="PSR12"/>

  <!--
  Curated list of WordPress specific rules.
  See https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards
  -->
  <rule ref="WordPress.Arrays.CommaAfterArrayItem"/>
  <rule ref="WordPress.CodeAnalysis.AssignmentInCondition"/>
  <rule ref="WordPress.CodeAnalysis.EmptyStatement"/>
  <rule ref="WordPress.CodeAnalysis.EscapedNotTranslated"/>
  <rule ref="WordPress.DB.PreparedSQLPlaceholders"/>
  <rule ref="WordPress.DB.PreparedSQL"/>
  <rule ref="WordPress.DB.RestrictedClasses"/>
  <rule ref="WordPress.DB.RestrictedFunctions"/>
  <rule ref="WordPress.DateTime.CurrentTimeTimestamp"/>
  <rule ref="WordPress.NamingConventions.PrefixAllGlobals"/>
  <rule ref="WordPress.NamingConventions.ValidHookName">
    <properties>
      <property name="additionalWordDelimiters" value="-/."/>
    </properties>
  </rule>
  <rule ref="WordPress.NamingConventions.ValidPostTypeSlug"/>
  <rule ref="WordPress.PHP.DevelopmentFunctions"/>
  <rule ref="WordPress.PHP.DevelopmentFunctions.error_log">
    <type>error</type>
  </rule>
  <rule ref="WordPress.PHP.DevelopmentFunctions.prevent_path_disclosure">
    <type>error</type>
  </rule>
  <rule ref="WordPress.PHP.RestrictedPHPFunctions"/>
  <rule ref="WordPress.PHP.DiscouragedPHPFunctions"/>
  <rule ref="WordPress.PHP.DiscouragedPHPFunctions.runtime_configuration">
    <type>error</type>
  </rule>
  <rule ref="WordPress.PHP.DontExtract"/>
  <rule ref="WordPress.PHP.IniSet"/>
  <rule ref="WordPress.PHP.NoSilencedErrors"/>
  <rule ref="WordPress.PHP.POSIXFunctions"/>
  <rule ref="WordPress.PHP.PregQuoteDelimiter"/>
  <rule ref="WordPress.PHP.RestrictedPHPFunctions"/>
  <rule ref="WordPress.PHP.StrictComparisons"/>
  <rule ref="WordPress.PHP.StrictInArray"/>
  <rule ref="WordPress.PHP.TypeCasts"/>
  <rule ref="WordPress.Security.EscapeOutput"/>
  <rule ref="WordPress.Security.NonceVerification"/>
  <rule ref="WordPress.Security.PluginMenuSlug"/>
  <rule ref="WordPress.Security.SafeRedirect"/>
  <rule ref="WordPress.Security.ValidatedSanitizedInput"/>
  <rule ref="WordPress.WP.AlternativeFunctions.curl"/>
  <rule ref="WordPress.WP.AlternativeFunctions.file_get_contents"/>
  <rule ref="WordPress.WP.AlternativeFunctions.file_system_read"/>
  <rule ref="WordPress.WP.AlternativeFunctions.strip_tags"/>
  <rule ref="WordPress.WP.AlternativeFunctions.rand_seeding"/>
  <rule ref="WordPress.WP.AlternativeFunctions.rand"/>
  <rule ref="WordPress.WP.CapitalPDangit"/>
  <rule ref="WordPress.WP.DeprecatedClasses"/>
  <rule ref="WordPress.WP.DeprecatedFunctions"/>
  <rule ref="WordPress.WP.DeprecatedParameters"/>
  <rule ref="WordPress.WP.DeprecatedParameterValues"/>
  <rule ref="WordPress.WP.DiscouragedConstants"/>
  <rule ref="WordPress.WP.DiscouragedFunctions"/>
  <rule ref="WordPress.WP.EnqueuedResourceParameters"/>
  <rule ref="WordPress.WP.EnqueuedResources"/>
  <rule ref="WordPress.WP.I18n"/>

  <!--
  Curated list of WordPress VIP rules.
  See https://github.com/Automattic/VIP-Coding-Standards/
  -->
  <rule ref="WordPressVIPMinimum.Classes.DeclarationCompatibility"/>
  <rule ref="WordPressVIPMinimum.Constants.ConstantString"/>
  <rule ref="WordPressVIPMinimum.Constants.RestrictedConstants"/>
  <rule ref="WordPressVIPMinimum.Files.IncludingNonPHPFile"/>
  <rule ref="WordPressVIPMinimum.Functions.CheckReturnValue"/>
  <rule ref="WordPressVIPMinimum.Functions.DynamicCalls"/>
  <rule ref="WordPressVIPMinimum.Functions.StripTags"/>
  <rule ref="WordPressVIPMinimum.Hooks.AlwaysReturnInFilter"/>
  <rule ref="WordPressVIPMinimum.Hooks.PreGetPosts"/>
  <rule ref="WordPressVIPMinimum.Performance.CacheValueOverride"/>
  <rule ref="WordPressVIPMinimum.Performance.RegexpCompare"/>
  <rule ref="WordPressVIPMinimum.Performance.TaxonomyMetaInOptions"/>
  <rule ref="WordPressVIPMinimum.Security.EscapingVoidReturnFunctions"/>
  <rule ref="WordPressVIPMinimum.Security.ExitAfterRedirect"/>
  <rule ref="WordPressVIPMinimum.Security.PHPFilterFunctions"/>
  <rule ref="WordPressVIPMinimum.Security.ProperEscapingFunction"/>
  <rule ref="WordPressVIPMinimum.Security.StaticStrreplace"/>

  <!-- The text domain to use for i18n. This should match what's listed in style.css. -->
  <rule ref="WordPress.WP.I18n">
    <properties>
      <property name="text_domain" type="array">
        <element value="action-test"/>
      </property>
    </properties>
  </rule>

  <!-- Use WordPress PHP Compatibility. -->
  <rule ref="PHPCompatibilityWP"/>

  <!-- Ignore side effects in functions.php -->
  <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
    <exclude-pattern>./functions.php</exclude-pattern>
  </rule>

  <!-- This warning appears to be ignored already, so we might as well disable it. -->
  <rule ref="Generic.Files.LineLength.TooLong">
    <severity>0</severity>
  </rule>

  <!-- Do not allow inline PHP lines that do not end with a semicolon. -->
  <rule ref="Squiz.PHP.EmbeddedPhp.NoSemicolon" />

</ruleset>
